##############################################################################
Windows/Linux: How to create a docker container with anaconda environment
##############################################################################

Create a docker container
-------------------------
1. Install docker

2. Put the already written dockerfile in the AVISPA folder and write in the same folder a requirement.txt
(The directory and all its contents, in which the dockerfile lies, will be covered within the docker container)

The requirements.txt should contain this following list:

absl-py==0.11.0
astor==0.8.1
blas==1.0
c-ares==1.16.1
ca-certificates==2020.10.14
certifi==2020.6.20
cloudpickle==1.6.0
cudatoolkit==10.1.243
cudnn==7.6.5
cupti==10.1.168
cycler==0.10.0
cytoolz==0.11.0
dask-core==2.30.0
decorator==4.4.2
freetype==2.10.4
gast==0.4.0
google-pasta==0.2.0
grpcio==1.14.1
h5py==2.8.0
hdf5==1.10.2
imageio==2.9.0
importlib-metadata==2.0.0
intel-openmp==2019.4
jpeg==9b
keras-applications==1.0.8
keras-base==2.3.1
keras-gpu==2.3.1
keras-preprocessing==1.1.0
kiwisolver==1.3.0
lcms2==2.11
libgcc-ng==9.1.0
libgfortran-ng==7.3.0
libpng==1.6.37
libprotobuf==3.13.0.1
libstdcxx-ng==9.1.0
libtiff==4.1.0
markdown==3.3.3
matplotlib-base==3.3.2
matplotlib==3.3.2
mkl==2018.0.3
mkl_fft==1.0.6
mkl_random==1.0.1
networkx==2.5
numpy-base==1.15.4
numpy==1.15.4
olefile==0.46
opencv
openssl==1.0.2u
pandas==0.25.0
pillow==8.0.1
pip==20.2.4
protobuf==3.13.0.1
pyparsing==2.4.7
python-dateutil==2.8.1
pytz==2020.1
pywavelets==1.1.1
pyyaml==5.3.1
scikit-image==0.16.2
scikit-learn==0.19.1
scipy==1.1.0
seaborn==0.11.0
setuptools==50.3.1
six==1.15.0
tbb==2020.3
tensorboard==1.14.0
tensorflow-base==1.14.0
tensorflow-estimator==1.14.0
tensorflow-gpu==1.14.0
tensorflow==1.14.0
termcolor==1.1.0
toolz==0.11.1
tornado==6.0.4
werkzeug==1.0.1
wheel==0.35.1
wrapt==1.12.1
xz==5.2.5
zipp==3.4.0
zlib==1.2.11
zstd==1.4.5


3. Open Windows/Linux Terminal and all the following instructions should be performed within that Terminal

4. Go to directory of the dockerfile (cd C:\Users\...\AVISPA)

5. Build a dockercontainer and give it a name (here: avispa)
docker build . -t avispa

6. Run Docker:

On Linux, run:
```
docker run -it -v "$PWD":/src/ avispa bash
```

On Windows, run:
```
docker run -it -v "%cd%":/src/ avispa bash

Now you should be in the docker container terminal, which works like a Linux Terminal. Your terminal should look like this:

(base) root@37dd0fba0bf8:/src# conda activate AVISPA_May21:

Every existing container has it's own Container ID. Here it's "37dd0fba0bf8". 
The (base) shows that the preinstalled base environment is active. But we want an anaconda env.


-----------------------------------------------------------
Create an anaconda environment within the docker container
-----------------------------------------------------------
1. Create a conda environment within the docker terminal (AVISPA is our conda enviroment name)
conda create -n AVISPA python=3.6

(optional)To create an environment with a specific version of a package:
conda create -n AVISPA scipy=0.15.0

2. See list of conda environments:
conda env list

3. Activate your enviroment (AVISPA is our enviroment name):
conda activate AVISPA 

4. (optional) Install anaconda packages
conda install -c anaconda keras
conda install -c anaconda matplotlib
conda install -c anaconda seaborn
conda install -c anaconda scikit-learn==0.19.1
conda install -c anaconda tensorflow-estimator==2.1

5. Go to the directory of the requirements.txt
conda install --file requirements.txt

(optional)
Install addition packages TO your conda environment:
(individual packages) conda install packagename
(install a file.txt including a list of packages) conda install --file file.txt
pip install -r file.txt

(optinonal)
check the list of all installed packages and it versions of your conda env:

conda list

6.(If project code is not adapted yet)
open â€¦\Test_Case\train_classification.sh and change the data directory to your path. 
(DATASET=...data/kaggle) and create at the end an empty output textfile in any directory(|tee .../textfile.txt)
execute the shell file (using the correct environment)

IMPORTANT HINT:The directory within the bash file must be adapted to the PATH structure of docker.
The docker path must look like this:
/src -> /TestCase
               |_ .idea
               |_ TestCase
               |_ Dockerfile
               |_ ...
               |_ ....
So instead of writing for example: "C:\Users\name\AVISPA\TestCase\data\kaggle" 
its better to write: "/src/TestCase/data/kaggle"

                

7. Execute bash file (Go to directory of train_classification.sh and run it)
cd ...\Test_Case\train_classification.sh
sh train_classification.sh

##############################################################################################
Open an already existing docker container (which you have created from the instruction above)
##############################################################################################
1. Show all previously created docker container within the Windows/Linux Terminal:
docker container ls --all

Now it should show something like:
CONTAINER ID   IMAGE     COMMAND   CREATED       STATUS          PORTS     NAMES
37dd0fba0bf8   avispa    "bash"    2 weeks ago   Up 29 minutes             tender_hamilton

2. Activate the container showed in the list above. It's important to select to desired container by the "NAMES"
   In our case we want to activate the avispa container (IMAGE), but we have to type "tender_hamilton" (NAMES) in the command:

docker start tender_hamilton

3. Run the selected container:

docker container attach tender_hamilton

Now you should be in the docker container terminal

4. Activate our conda enviroment as decribed in the section: "Create an anaconda environment within the docker container" above.

conda activate AVISPA


5.(optinonal)
check the list of all installed packages and it versions of your conda env:

conda list

